{
  "results": {
    "leaderboard_gpqa_mmlu": {
      "acc_norm,none": 0.2751677852348993,
      "acc_norm_stderr,none": 0.0129458988196224,
      "alias": "leaderboard_gpqa_mmlu"
    },
    "leaderboard_gpqa_mmlu_diamond": {
      "acc_norm,none": 0.2474747474747475,
      "acc_norm_stderr,none": 0.0307463007421245,
      "alias": " - leaderboard_gpqa_mmlu_diamond"
    },
    "leaderboard_gpqa_mmlu_extended": {
      "acc_norm,none": 0.2857142857142857,
      "acc_norm_stderr,none": 0.019351013185102687,
      "alias": " - leaderboard_gpqa_mmlu_extended"
    },
    "leaderboard_gpqa_mmlu_main": {
      "acc_norm,none": 0.27455357142857145,
      "acc_norm_stderr,none": 0.021108747290633865,
      "alias": " - leaderboard_gpqa_mmlu_main"
    }
  },
  "groups": {
    "leaderboard_gpqa_mmlu": {
      "acc_norm,none": 0.2751677852348993,
      "acc_norm_stderr,none": 0.0129458988196224,
      "alias": "leaderboard_gpqa_mmlu"
    }
  },
  "group_subtasks": {
    "leaderboard_gpqa_mmlu": [
      "leaderboard_gpqa_mmlu_diamond",
      "leaderboard_gpqa_mmlu_main",
      "leaderboard_gpqa_mmlu_extended"
    ]
  },
  "configs": {
    "leaderboard_gpqa_mmlu_diamond": {
      "task": "leaderboard_gpqa_mmlu_diamond",
      "group": "leaderboard_gpqa_mmlu",
      "dataset_path": "Idavidrein/gpqa",
      "dataset_name": "gpqa_diamond",
      "training_split": "train",
      "validation_split": "train",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        choices = [\n            preprocess(doc[\"Incorrect Answer 1\"]),\n            preprocess(doc[\"Incorrect Answer 2\"]),\n            preprocess(doc[\"Incorrect Answer 3\"]),\n            preprocess(doc[\"Correct Answer\"]),\n        ]\n\n        random.shuffle(choices)\n        correct_answer_index = choices.index(preprocess(doc[\"Correct Answer\"]))\n\n        out_doc = {\n            \"choice1\": choices[0],\n            \"choice2\": choices[1],\n            \"choice3\": choices[2],\n            \"choice4\": choices[3],\n            \"answer\": f\"{chr(65 + correct_answer_index)}\",\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "What is the correct answer to this question:{{Question}}\nChoices:\nA. {{choice1}}\nB. {{choice2}}\nC. {{choice3}}\nD. {{choice4}}\nAnswer: ",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "leaderboard_gpqa_mmlu_extended": {
      "task": "leaderboard_gpqa_mmlu_extended",
      "group": "leaderboard_gpqa_mmlu",
      "dataset_path": "Idavidrein/gpqa",
      "dataset_name": "gpqa_extended",
      "training_split": "train",
      "validation_split": "train",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        choices = [\n            preprocess(doc[\"Incorrect Answer 1\"]),\n            preprocess(doc[\"Incorrect Answer 2\"]),\n            preprocess(doc[\"Incorrect Answer 3\"]),\n            preprocess(doc[\"Correct Answer\"]),\n        ]\n\n        random.shuffle(choices)\n        correct_answer_index = choices.index(preprocess(doc[\"Correct Answer\"]))\n\n        out_doc = {\n            \"choice1\": choices[0],\n            \"choice2\": choices[1],\n            \"choice3\": choices[2],\n            \"choice4\": choices[3],\n            \"answer\": f\"{chr(65 + correct_answer_index)}\",\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "What is the correct answer to this question:{{Question}}\nChoices:\nA. {{choice1}}\nB. {{choice2}}\nC. {{choice3}}\nD. {{choice4}}\nAnswer: ",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "leaderboard_gpqa_mmlu_main": {
      "task": "leaderboard_gpqa_mmlu_main",
      "group": "leaderboard_gpqa_mmlu",
      "dataset_path": "Idavidrein/gpqa",
      "dataset_name": "gpqa_main",
      "training_split": "train",
      "validation_split": "train",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        choices = [\n            preprocess(doc[\"Incorrect Answer 1\"]),\n            preprocess(doc[\"Incorrect Answer 2\"]),\n            preprocess(doc[\"Incorrect Answer 3\"]),\n            preprocess(doc[\"Correct Answer\"]),\n        ]\n\n        random.shuffle(choices)\n        correct_answer_index = choices.index(preprocess(doc[\"Correct Answer\"]))\n\n        out_doc = {\n            \"choice1\": choices[0],\n            \"choice2\": choices[1],\n            \"choice3\": choices[2],\n            \"choice4\": choices[3],\n            \"answer\": f\"{chr(65 + correct_answer_index)}\",\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "What is the correct answer to this question:{{Question}}\nChoices:\nA. {{choice1}}\nB. {{choice2}}\nC. {{choice3}}\nD. {{choice4}}\nAnswer: ",
      "doc_to_target": "answer",
      "doc_to_choice": [
        "A",
        "B",
        "C",
        "D"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "leaderboard_gpqa_mmlu_diamond": 1.0,
    "leaderboard_gpqa_mmlu_extended": 1.0,
    "leaderboard_gpqa_mmlu_main": 1.0
  },
  "n-shot": {
    "leaderboard_gpqa_mmlu": 0,
    "leaderboard_gpqa_mmlu_diamond": 0,
    "leaderboard_gpqa_mmlu_extended": 0,
    "leaderboard_gpqa_mmlu_main": 0
  },
  "higher_is_better": {
    "leaderboard_gpqa_mmlu": {
      "acc_norm": true
    },
    "leaderboard_gpqa_mmlu_diamond": {
      "acc_norm": true
    },
    "leaderboard_gpqa_mmlu_extended": {
      "acc_norm": true
    },
    "leaderboard_gpqa_mmlu_main": {
      "acc_norm": true
    }
  },
  "n-samples": {
    "leaderboard_gpqa_mmlu_diamond": {
      "original": 198,
      "effective": 198
    },
    "leaderboard_gpqa_mmlu_main": {
      "original": 448,
      "effective": 448
    },
    "leaderboard_gpqa_mmlu_extended": {
      "original": 546,
      "effective": 546
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=/fast/groups/sf/ttt/models/e3/mmluaux/pythia-1.4b,trust_remote_code=True",
    "model_num_parameters": 1414647808,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "",
    "batch_size": "1",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "b745683",
  "date": 1719946910.4876966,
  "pretty_env_info": "PyTorch version: 2.1.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: version 3.29.2\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-5.15.0-89-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA H100 80GB HBM3\nNvidia driver version: 545.23.08\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                       x86_64\nCPU op-mode(s):                     32-bit, 64-bit\nAddress sizes:                      52 bits physical, 57 bits virtual\nByte Order:                         Little Endian\nCPU(s):                             384\nOn-line CPU(s) list:                9-16\nOff-line CPU(s) list:               0-8,17-383\nVendor ID:                          AuthenticAMD\nModel name:                         AMD EPYC 9654 96-Core Processor\nCPU family:                         25\nModel:                              17\nThread(s) per core:                 2\nCore(s) per socket:                 96\nSocket(s):                          2\nStepping:                           1\nFrequency boost:                    enabled\nCPU max MHz:                        3707.8120\nCPU min MHz:                        1500.0000\nBogoMIPS:                           4799.99\nFlags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 invpcid_single hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local avx512_bf16 clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin cppc arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq la57 rdpid overflow_recov succor smca fsrm flush_l1d\nVirtualization:                     AMD-V\nL1d cache:                          6 MiB (192 instances)\nL1i cache:                          6 MiB (192 instances)\nL2 cache:                           192 MiB (192 instances)\nL3 cache:                           768 MiB (24 instances)\nNUMA node(s):                       2\nNUMA node0 CPU(s):                  0-95,192-287\nNUMA node1 CPU(s):                  96-191,288-383\nVulnerability Gather data sampling: Not affected\nVulnerability Itlb multihit:        Not affected\nVulnerability L1tf:                 Not affected\nVulnerability Mds:                  Not affected\nVulnerability Meltdown:             Not affected\nVulnerability Mmio stale data:      Not affected\nVulnerability Retbleed:             Not affected\nVulnerability Spec rstack overflow: Mitigation; safe RET\nVulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:           Mitigation; Retpolines, IBPB conditional, IBRS_FW, STIBP always-on, RSB filling, PBRSB-eIBRS Not affected\nVulnerability Srbds:                Not affected\nVulnerability Tsx async abort:      Not affected\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.3\n[pip3] torch==2.1.1+cu121\n[pip3] triton==2.1.0\n[conda] Could not collect",
  "transformers_version": "4.41.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|endoftext|>",
    0
  ],
  "tokenizer_eos_token": [
    "<|endoftext|>",
    0
  ],
  "tokenizer_bos_token": [
    "<|endoftext|>",
    0
  ],
  "eot_token_id": 0,
  "max_length": 2048,
  "task_hashes": {
    "leaderboard_gpqa_mmlu_diamond": "16453783287e86e3d93a946d1f315a21a3eba31941c64f094cedbac26efbf5e5",
    "leaderboard_gpqa_mmlu_main": "24fc70505af9e8af47668c25c83dccd4d3f67544f421ed85982de7d4e24df68a",
    "leaderboard_gpqa_mmlu_extended": "e23de23d5ad0a5efb7ed18a35db91606c555c9cfd90bca5d34efe3d18edea8ef"
  },
  "model_source": "hf",
  "model_name": "/fast/groups/sf/ttt/models/e3/mmluaux/pythia-1.4b",
  "model_name_sanitized": "__fast__groups__sf__ttt__models__e3__mmluaux__pythia-1.4b",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 3061354.234059792,
  "end_time": 3061391.037149779,
  "total_evaluation_time_seconds": "36.80308998702094"
}