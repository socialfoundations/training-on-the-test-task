{
  "results": {
    "leaderboard_musr": {
      "acc_norm,none": 0.37566137566137564,
      "acc_norm_stderr,none": 0.017187235603404166,
      "alias": "leaderboard_musr"
    },
    "leaderboard_musr_murder_mysteries": {
      "acc_norm,none": 0.532,
      "acc_norm_stderr,none": 0.031621252575725504,
      "alias": " - leaderboard_musr_murder_mysteries"
    },
    "leaderboard_musr_object_placements": {
      "acc_norm,none": 0.3046875,
      "acc_norm_stderr,none": 0.0288235352734838,
      "alias": " - leaderboard_musr_object_placements"
    },
    "leaderboard_musr_team_allocation": {
      "acc_norm,none": 0.292,
      "acc_norm_stderr,none": 0.028814320402205634,
      "alias": " - leaderboard_musr_team_allocation"
    }
  },
  "groups": {
    "leaderboard_musr": {
      "acc_norm,none": 0.37566137566137564,
      "acc_norm_stderr,none": 0.017187235603404166,
      "alias": "leaderboard_musr"
    }
  },
  "group_subtasks": {
    "leaderboard_musr": [
      "leaderboard_musr_murder_mysteries",
      "leaderboard_musr_object_placements",
      "leaderboard_musr_team_allocation"
    ]
  },
  "configs": {
    "leaderboard_musr_murder_mysteries": {
      "task": "leaderboard_musr_murder_mysteries",
      "group": [
        "leaderboard_musr"
      ],
      "dataset_path": "TAUR-Lab/MuSR",
      "test_split": "murder_mysteries",
      "doc_to_text": "def doc_to_text(doc):\n    \"\"\"\n    Convert a doc to text.\n    \"\"\"\n    choices = \"\"\n    for i, choice in enumerate(ast.literal_eval(doc[\"choices\"])):\n        choices += f\"{i+1} - {choice}\\n\"\n\n    text = DOC_TO_TEXT.format(narrative=doc[\"narrative\"], question=doc[\"question\"], choices=choices)\n\n    return text\n",
      "doc_to_target": "{{answer_choice}}",
      "doc_to_choice": "{{choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "leaderboard_musr_object_placements": {
      "task": "leaderboard_musr_object_placements",
      "group": [
        "leaderboard_musr"
      ],
      "dataset_path": "TAUR-Lab/MuSR",
      "test_split": "object_placements",
      "doc_to_text": "def doc_to_text(doc):\n    \"\"\"\n    Convert a doc to text.\n    \"\"\"\n    choices = \"\"\n    for i, choice in enumerate(ast.literal_eval(doc[\"choices\"])):\n        choices += f\"{i+1} - {choice}\\n\"\n\n    text = DOC_TO_TEXT.format(narrative=doc[\"narrative\"], question=doc[\"question\"], choices=choices)\n\n    return text\n",
      "doc_to_target": "{{answer_choice}}",
      "doc_to_choice": "{{choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "leaderboard_musr_team_allocation": {
      "task": "leaderboard_musr_team_allocation",
      "group": [
        "leaderboard_musr"
      ],
      "dataset_path": "TAUR-Lab/MuSR",
      "test_split": "team_allocation",
      "doc_to_text": "def doc_to_text(doc):\n    \"\"\"\n    Convert a doc to text.\n    \"\"\"\n    choices = \"\"\n    for i, choice in enumerate(ast.literal_eval(doc[\"choices\"])):\n        choices += f\"{i+1} - {choice}\\n\"\n\n    text = DOC_TO_TEXT.format(narrative=doc[\"narrative\"], question=doc[\"question\"], choices=choices)\n\n    return text\n",
      "doc_to_target": "{{answer_choice}}",
      "doc_to_choice": "{{choices}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "metric_list": [
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "leaderboard_musr_murder_mysteries": 1.0,
    "leaderboard_musr_object_placements": 1.0,
    "leaderboard_musr_team_allocation": 1.0
  },
  "n-shot": {
    "leaderboard_musr": null,
    "leaderboard_musr_murder_mysteries": null,
    "leaderboard_musr_object_placements": null,
    "leaderboard_musr_team_allocation": null
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=/fast/groups/sf/ttt/models/e3/mmluaux/internlm-7b,trust_remote_code=True",
    "batch_size": "1",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "b745683",
  "pretty_env_info": "PyTorch version: 2.1.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.3 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: version 3.29.2\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-5.15.0-89-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A100-SXM4-80GB\nNvidia driver version: 545.23.08\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                       x86_64\nCPU op-mode(s):                     32-bit, 64-bit\nAddress sizes:                      43 bits physical, 48 bits virtual\nByte Order:                         Little Endian\nCPU(s):                             256\nOn-line CPU(s) list:                24-31\nOff-line CPU(s) list:               0-23,32-255\nVendor ID:                          AuthenticAMD\nModel name:                         AMD EPYC 7662 64-Core Processor\nCPU family:                         23\nModel:                              49\nThread(s) per core:                 2\nCore(s) per socket:                 64\nSocket(s):                          2\nStepping:                           0\nFrequency boost:                    enabled\nCPU max MHz:                        2154.2959\nCPU min MHz:                        1500.0000\nBogoMIPS:                           3999.91\nFlags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es\nVirtualization:                     AMD-V\nL1d cache:                          4 MiB (128 instances)\nL1i cache:                          4 MiB (128 instances)\nL2 cache:                           64 MiB (128 instances)\nL3 cache:                           512 MiB (32 instances)\nNUMA node(s):                       2\nNUMA node0 CPU(s):                  0-63,128-191\nNUMA node1 CPU(s):                  64-127,192-255\nVulnerability Gather data sampling: Not affected\nVulnerability Itlb multihit:        Not affected\nVulnerability L1tf:                 Not affected\nVulnerability Mds:                  Not affected\nVulnerability Meltdown:             Not affected\nVulnerability Mmio stale data:      Not affected\nVulnerability Retbleed:             Mitigation; untrained return thunk; SMT enabled with STIBP protection\nVulnerability Spec rstack overflow: Mitigation; safe RET\nVulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:           Mitigation; Retpolines, IBPB conditional, STIBP always-on, RSB filling, PBRSB-eIBRS Not affected\nVulnerability Srbds:                Not affected\nVulnerability Tsx async abort:      Not affected\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.3\n[pip3] torch==2.1.1+cu121\n[pip3] triton==2.1.0\n[conda] Could not collect",
  "transformers_version": "4.41.1",
  "upper_git_hash": null
}